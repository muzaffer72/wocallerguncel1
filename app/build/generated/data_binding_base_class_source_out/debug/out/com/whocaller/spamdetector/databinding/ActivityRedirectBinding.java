// Generated by view binder compiler. Do not edit!
package com.whocaller.spamdetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.whocaller.spamdetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRedirectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView btnAction;

  @NonNull
  public final TextView btnActionTxt;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final MaterialCardView btnSkip;

  @NonNull
  public final TextView description;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final TextView title;

  private ActivityRedirectBinding(@NonNull ConstraintLayout rootView, @NonNull CardView btnAction,
      @NonNull TextView btnActionTxt, @NonNull ImageView btnClose,
      @NonNull MaterialCardView btnSkip, @NonNull TextView description,
      @NonNull RelativeLayout header, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnAction = btnAction;
    this.btnActionTxt = btnActionTxt;
    this.btnClose = btnClose;
    this.btnSkip = btnSkip;
    this.description = description;
    this.header = header;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRedirectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRedirectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_redirect, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRedirectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_action;
      CardView btnAction = ViewBindings.findChildViewById(rootView, id);
      if (btnAction == null) {
        break missingId;
      }

      id = R.id.btnActionTxt;
      TextView btnActionTxt = ViewBindings.findChildViewById(rootView, id);
      if (btnActionTxt == null) {
        break missingId;
      }

      id = R.id.btn_close;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_skip;
      MaterialCardView btnSkip = ViewBindings.findChildViewById(rootView, id);
      if (btnSkip == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityRedirectBinding((ConstraintLayout) rootView, btnAction, btnActionTxt,
          btnClose, btnSkip, description, header, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
