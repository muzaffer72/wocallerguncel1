// Generated by view binder compiler. Do not edit!
package com.whocaller.spamdetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.whocaller.spamdetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySplashBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout agreeLay;

  @NonNull
  public final RelativeLayout btnAgree;

  @NonNull
  public final ProgressBar btnAgreeProg;

  @NonNull
  public final TextView btnAgreeTxt;

  @NonNull
  public final TextView contentDataProcess;

  @NonNull
  public final TextView contentDataUse;

  @NonNull
  public final TextView contentEmpower;

  @NonNull
  public final LinearLayout contentPermission;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final ImageView icon0;

  @NonNull
  public final ImageView icon01;

  @NonNull
  public final ImageView icon1;

  @NonNull
  public final ImageView icon2;

  @NonNull
  public final ImageView icon3;

  @NonNull
  public final RelativeLayout permissions;

  @NonNull
  public final TextView privacyLink;

  @NonNull
  public final TextView termsLink;

  @NonNull
  public final ImageView toggleDataProcess;

  @NonNull
  public final ImageView toggleDataUse;

  @NonNull
  public final ImageView toggleEmpower;

  @NonNull
  public final ImageView togglePermission;

  private ActivitySplashBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout agreeLay,
      @NonNull RelativeLayout btnAgree, @NonNull ProgressBar btnAgreeProg,
      @NonNull TextView btnAgreeTxt, @NonNull TextView contentDataProcess,
      @NonNull TextView contentDataUse, @NonNull TextView contentEmpower,
      @NonNull LinearLayout contentPermission, @NonNull LinearLayout header,
      @NonNull ImageView icon, @NonNull ImageView icon0, @NonNull ImageView icon01,
      @NonNull ImageView icon1, @NonNull ImageView icon2, @NonNull ImageView icon3,
      @NonNull RelativeLayout permissions, @NonNull TextView privacyLink,
      @NonNull TextView termsLink, @NonNull ImageView toggleDataProcess,
      @NonNull ImageView toggleDataUse, @NonNull ImageView toggleEmpower,
      @NonNull ImageView togglePermission) {
    this.rootView = rootView;
    this.agreeLay = agreeLay;
    this.btnAgree = btnAgree;
    this.btnAgreeProg = btnAgreeProg;
    this.btnAgreeTxt = btnAgreeTxt;
    this.contentDataProcess = contentDataProcess;
    this.contentDataUse = contentDataUse;
    this.contentEmpower = contentEmpower;
    this.contentPermission = contentPermission;
    this.header = header;
    this.icon = icon;
    this.icon0 = icon0;
    this.icon01 = icon01;
    this.icon1 = icon1;
    this.icon2 = icon2;
    this.icon3 = icon3;
    this.permissions = permissions;
    this.privacyLink = privacyLink;
    this.termsLink = termsLink;
    this.toggleDataProcess = toggleDataProcess;
    this.toggleDataUse = toggleDataUse;
    this.toggleEmpower = toggleEmpower;
    this.togglePermission = togglePermission;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySplashBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySplashBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_splash, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySplashBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.agree_lay;
      LinearLayout agreeLay = ViewBindings.findChildViewById(rootView, id);
      if (agreeLay == null) {
        break missingId;
      }

      id = R.id.btn_agree;
      RelativeLayout btnAgree = ViewBindings.findChildViewById(rootView, id);
      if (btnAgree == null) {
        break missingId;
      }

      id = R.id.btn_agree_prog;
      ProgressBar btnAgreeProg = ViewBindings.findChildViewById(rootView, id);
      if (btnAgreeProg == null) {
        break missingId;
      }

      id = R.id.btn_agree_txt;
      TextView btnAgreeTxt = ViewBindings.findChildViewById(rootView, id);
      if (btnAgreeTxt == null) {
        break missingId;
      }

      id = R.id.contentDataProcess;
      TextView contentDataProcess = ViewBindings.findChildViewById(rootView, id);
      if (contentDataProcess == null) {
        break missingId;
      }

      id = R.id.contentDataUse;
      TextView contentDataUse = ViewBindings.findChildViewById(rootView, id);
      if (contentDataUse == null) {
        break missingId;
      }

      id = R.id.contentEmpower;
      TextView contentEmpower = ViewBindings.findChildViewById(rootView, id);
      if (contentEmpower == null) {
        break missingId;
      }

      id = R.id.contentPermission;
      LinearLayout contentPermission = ViewBindings.findChildViewById(rootView, id);
      if (contentPermission == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = ViewBindings.findChildViewById(rootView, id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.icon0;
      ImageView icon0 = ViewBindings.findChildViewById(rootView, id);
      if (icon0 == null) {
        break missingId;
      }

      id = R.id.icon01;
      ImageView icon01 = ViewBindings.findChildViewById(rootView, id);
      if (icon01 == null) {
        break missingId;
      }

      id = R.id.icon1;
      ImageView icon1 = ViewBindings.findChildViewById(rootView, id);
      if (icon1 == null) {
        break missingId;
      }

      id = R.id.icon2;
      ImageView icon2 = ViewBindings.findChildViewById(rootView, id);
      if (icon2 == null) {
        break missingId;
      }

      id = R.id.icon3;
      ImageView icon3 = ViewBindings.findChildViewById(rootView, id);
      if (icon3 == null) {
        break missingId;
      }

      id = R.id.permissions;
      RelativeLayout permissions = ViewBindings.findChildViewById(rootView, id);
      if (permissions == null) {
        break missingId;
      }

      id = R.id.privacy_link;
      TextView privacyLink = ViewBindings.findChildViewById(rootView, id);
      if (privacyLink == null) {
        break missingId;
      }

      id = R.id.terms_link;
      TextView termsLink = ViewBindings.findChildViewById(rootView, id);
      if (termsLink == null) {
        break missingId;
      }

      id = R.id.toggleDataProcess;
      ImageView toggleDataProcess = ViewBindings.findChildViewById(rootView, id);
      if (toggleDataProcess == null) {
        break missingId;
      }

      id = R.id.toggleDataUse;
      ImageView toggleDataUse = ViewBindings.findChildViewById(rootView, id);
      if (toggleDataUse == null) {
        break missingId;
      }

      id = R.id.toggleEmpower;
      ImageView toggleEmpower = ViewBindings.findChildViewById(rootView, id);
      if (toggleEmpower == null) {
        break missingId;
      }

      id = R.id.togglePermission;
      ImageView togglePermission = ViewBindings.findChildViewById(rootView, id);
      if (togglePermission == null) {
        break missingId;
      }

      return new ActivitySplashBinding((LinearLayout) rootView, agreeLay, btnAgree, btnAgreeProg,
          btnAgreeTxt, contentDataProcess, contentDataUse, contentEmpower, contentPermission,
          header, icon, icon0, icon01, icon1, icon2, icon3, permissions, privacyLink, termsLink,
          toggleDataProcess, toggleDataUse, toggleEmpower, togglePermission);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
