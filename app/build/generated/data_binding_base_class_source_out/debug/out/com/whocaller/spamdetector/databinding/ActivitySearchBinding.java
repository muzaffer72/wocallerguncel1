// Generated by view binder compiler. Do not edit!
package com.whocaller.spamdetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.whocaller.spamdetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LottieAnimationView animationView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final ImageView bg;

  @NonNull
  public final LinearLayout btnSearch;

  @NonNull
  public final FrameLayout flAdplaceholder;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final NestedScrollView mainLay;

  @NonNull
  public final RecyclerView onlineRecycler;

  @NonNull
  public final EditText searchEt;

  @NonNull
  public final TextView searchTextBtn;

  private ActivitySearchBinding(@NonNull RelativeLayout rootView,
      @NonNull LottieAnimationView animationView, @NonNull ImageView backBtn, @NonNull ImageView bg,
      @NonNull LinearLayout btnSearch, @NonNull FrameLayout flAdplaceholder,
      @NonNull RelativeLayout header, @NonNull NestedScrollView mainLay,
      @NonNull RecyclerView onlineRecycler, @NonNull EditText searchEt,
      @NonNull TextView searchTextBtn) {
    this.rootView = rootView;
    this.animationView = animationView;
    this.backBtn = backBtn;
    this.bg = bg;
    this.btnSearch = btnSearch;
    this.flAdplaceholder = flAdplaceholder;
    this.header = header;
    this.mainLay = mainLay;
    this.onlineRecycler = onlineRecycler;
    this.searchEt = searchEt;
    this.searchTextBtn = searchTextBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animationView;
      LottieAnimationView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.bg;
      ImageView bg = ViewBindings.findChildViewById(rootView, id);
      if (bg == null) {
        break missingId;
      }

      id = R.id.btn_search;
      LinearLayout btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.fl_adplaceholder;
      FrameLayout flAdplaceholder = ViewBindings.findChildViewById(rootView, id);
      if (flAdplaceholder == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.main_lay;
      NestedScrollView mainLay = ViewBindings.findChildViewById(rootView, id);
      if (mainLay == null) {
        break missingId;
      }

      id = R.id.online_recycler;
      RecyclerView onlineRecycler = ViewBindings.findChildViewById(rootView, id);
      if (onlineRecycler == null) {
        break missingId;
      }

      id = R.id.search_et;
      EditText searchEt = ViewBindings.findChildViewById(rootView, id);
      if (searchEt == null) {
        break missingId;
      }

      id = R.id.search_text_btn;
      TextView searchTextBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchTextBtn == null) {
        break missingId;
      }

      return new ActivitySearchBinding((RelativeLayout) rootView, animationView, backBtn, bg,
          btnSearch, flAdplaceholder, header, mainLay, onlineRecycler, searchEt, searchTextBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
