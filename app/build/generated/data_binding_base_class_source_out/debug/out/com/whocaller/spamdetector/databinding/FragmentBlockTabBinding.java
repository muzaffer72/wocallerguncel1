// Generated by view binder compiler. Do not edit!
package com.whocaller.spamdetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.makeramen.roundedimageview.RoundedImageView;
import com.whocaller.spamdetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBlockTabBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView blockTag;

  @NonNull
  public final RoundedImageView contactAvatar;

  @NonNull
  public final TextView contactName;

  @NonNull
  public final TextView contactPhone;

  @NonNull
  public final LinearLayout demoItem;

  @NonNull
  public final RelativeLayout nameLay;

  @NonNull
  public final RecyclerView recyclerview;

  private FragmentBlockTabBinding(@NonNull LinearLayout rootView, @NonNull ImageView blockTag,
      @NonNull RoundedImageView contactAvatar, @NonNull TextView contactName,
      @NonNull TextView contactPhone, @NonNull LinearLayout demoItem,
      @NonNull RelativeLayout nameLay, @NonNull RecyclerView recyclerview) {
    this.rootView = rootView;
    this.blockTag = blockTag;
    this.contactAvatar = contactAvatar;
    this.contactName = contactName;
    this.contactPhone = contactPhone;
    this.demoItem = demoItem;
    this.nameLay = nameLay;
    this.recyclerview = recyclerview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBlockTabBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBlockTabBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_block_tab, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBlockTabBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.block_tag;
      ImageView blockTag = ViewBindings.findChildViewById(rootView, id);
      if (blockTag == null) {
        break missingId;
      }

      id = R.id.contact_avatar;
      RoundedImageView contactAvatar = ViewBindings.findChildViewById(rootView, id);
      if (contactAvatar == null) {
        break missingId;
      }

      id = R.id.contact_name;
      TextView contactName = ViewBindings.findChildViewById(rootView, id);
      if (contactName == null) {
        break missingId;
      }

      id = R.id.contact_phone;
      TextView contactPhone = ViewBindings.findChildViewById(rootView, id);
      if (contactPhone == null) {
        break missingId;
      }

      id = R.id.demo_item;
      LinearLayout demoItem = ViewBindings.findChildViewById(rootView, id);
      if (demoItem == null) {
        break missingId;
      }

      id = R.id.name_lay;
      RelativeLayout nameLay = ViewBindings.findChildViewById(rootView, id);
      if (nameLay == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      return new FragmentBlockTabBinding((LinearLayout) rootView, blockTag, contactAvatar,
          contactName, contactPhone, demoItem, nameLay, recyclerview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
