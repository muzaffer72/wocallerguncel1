// Generated by view binder compiler. Do not edit!
package com.whocaller.spamdetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.makeramen.roundedimageview.RoundedImageView;
import com.whocaller.spamdetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout appbar;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final RelativeLayout buttonBar;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ImageView contactAvatar;

  @NonNull
  public final RecyclerView databaseRecycler;

  @NonNull
  public final ImageView deleteButton;

  @NonNull
  public final FloatingActionButton dialPad;

  @NonNull
  public final FrameLayout flFragment;

  @NonNull
  public final TextView itemCount;

  @NonNull
  public final ImageView more;

  @NonNull
  public final RoundedImageView profile;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView searchBtn;

  @NonNull
  public final LinearLayout searchItem;

  @NonNull
  public final LinearLayout searchLay;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final ImageView selectAllButton;

  @NonNull
  public final TextView whocallerSearch;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout appbar,
      @NonNull ImageView backBtn, @NonNull BottomNavigationView bottomNavigationView,
      @NonNull RelativeLayout buttonBar, @NonNull ImageView close, @NonNull ImageView contactAvatar,
      @NonNull RecyclerView databaseRecycler, @NonNull ImageView deleteButton,
      @NonNull FloatingActionButton dialPad, @NonNull FrameLayout flFragment,
      @NonNull TextView itemCount, @NonNull ImageView more, @NonNull RoundedImageView profile,
      @NonNull RecyclerView recyclerView, @NonNull TextView searchBtn,
      @NonNull LinearLayout searchItem, @NonNull LinearLayout searchLay,
      @NonNull SearchView searchView, @NonNull ImageView selectAllButton,
      @NonNull TextView whocallerSearch) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.backBtn = backBtn;
    this.bottomNavigationView = bottomNavigationView;
    this.buttonBar = buttonBar;
    this.close = close;
    this.contactAvatar = contactAvatar;
    this.databaseRecycler = databaseRecycler;
    this.deleteButton = deleteButton;
    this.dialPad = dialPad;
    this.flFragment = flFragment;
    this.itemCount = itemCount;
    this.more = more;
    this.profile = profile;
    this.recyclerView = recyclerView;
    this.searchBtn = searchBtn;
    this.searchItem = searchItem;
    this.searchLay = searchLay;
    this.searchView = searchView;
    this.selectAllButton = selectAllButton;
    this.whocallerSearch = whocallerSearch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      RelativeLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.back_btn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.buttonBar;
      RelativeLayout buttonBar = ViewBindings.findChildViewById(rootView, id);
      if (buttonBar == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.contact_avatar;
      ImageView contactAvatar = ViewBindings.findChildViewById(rootView, id);
      if (contactAvatar == null) {
        break missingId;
      }

      id = R.id.database_recycler;
      RecyclerView databaseRecycler = ViewBindings.findChildViewById(rootView, id);
      if (databaseRecycler == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      ImageView deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.dial_pad;
      FloatingActionButton dialPad = ViewBindings.findChildViewById(rootView, id);
      if (dialPad == null) {
        break missingId;
      }

      id = R.id.flFragment;
      FrameLayout flFragment = ViewBindings.findChildViewById(rootView, id);
      if (flFragment == null) {
        break missingId;
      }

      id = R.id.item_count;
      TextView itemCount = ViewBindings.findChildViewById(rootView, id);
      if (itemCount == null) {
        break missingId;
      }

      id = R.id.more;
      ImageView more = ViewBindings.findChildViewById(rootView, id);
      if (more == null) {
        break missingId;
      }

      id = R.id.profile;
      RoundedImageView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.search_btn;
      TextView searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.search_item;
      LinearLayout searchItem = ViewBindings.findChildViewById(rootView, id);
      if (searchItem == null) {
        break missingId;
      }

      id = R.id.searchLay;
      LinearLayout searchLay = ViewBindings.findChildViewById(rootView, id);
      if (searchLay == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.selectAllButton;
      ImageView selectAllButton = ViewBindings.findChildViewById(rootView, id);
      if (selectAllButton == null) {
        break missingId;
      }

      id = R.id.whocaller_search;
      TextView whocallerSearch = ViewBindings.findChildViewById(rootView, id);
      if (whocallerSearch == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, appbar, backBtn,
          bottomNavigationView, buttonBar, close, contactAvatar, databaseRecycler, deleteButton,
          dialPad, flFragment, itemCount, more, profile, recyclerView, searchBtn, searchItem,
          searchLay, searchView, selectAllButton, whocallerSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
