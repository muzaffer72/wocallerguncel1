// Generated by view binder compiler. Do not edit!
package com.whocaller.spamdetector.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.whocaller.spamdetector.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAllCallHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView closeBtn;

  @NonNull
  public final ImageView more;

  @NonNull
  public final TextView name;

  @NonNull
  public final RelativeLayout noCallsLay;

  @NonNull
  public final RelativeLayout progressBar;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final TextView showAllCalls;

  @NonNull
  public final TextView txtMessage;

  private ActivityAllCallHistoryBinding(@NonNull LinearLayout rootView, @NonNull ImageView closeBtn,
      @NonNull ImageView more, @NonNull TextView name, @NonNull RelativeLayout noCallsLay,
      @NonNull RelativeLayout progressBar, @NonNull RecyclerView recyclerview,
      @NonNull TextView showAllCalls, @NonNull TextView txtMessage) {
    this.rootView = rootView;
    this.closeBtn = closeBtn;
    this.more = more;
    this.name = name;
    this.noCallsLay = noCallsLay;
    this.progressBar = progressBar;
    this.recyclerview = recyclerview;
    this.showAllCalls = showAllCalls;
    this.txtMessage = txtMessage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAllCallHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAllCallHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_all_call_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAllCallHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.close_btn;
      ImageView closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.more;
      ImageView more = ViewBindings.findChildViewById(rootView, id);
      if (more == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.no_calls_lay;
      RelativeLayout noCallsLay = ViewBindings.findChildViewById(rootView, id);
      if (noCallsLay == null) {
        break missingId;
      }

      id = R.id.progressBar;
      RelativeLayout progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.show_all_calls;
      TextView showAllCalls = ViewBindings.findChildViewById(rootView, id);
      if (showAllCalls == null) {
        break missingId;
      }

      id = R.id.txt_message;
      TextView txtMessage = ViewBindings.findChildViewById(rootView, id);
      if (txtMessage == null) {
        break missingId;
      }

      return new ActivityAllCallHistoryBinding((LinearLayout) rootView, closeBtn, more, name,
          noCallsLay, progressBar, recyclerview, showAllCalls, txtMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
